/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import bll.AnswerBll;
import bll.QuestionBll;
import bll.QuizDetailBll;
import common.Common;
import dto.AnswerObj;
import dto.QuestionObj;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NamPC
 */
public class QuestionManagementPanel extends javax.swing.JPanel {

    QuestionBll questionBll = new QuestionBll();
    AnswerBll answerBll = new AnswerBll();
    QuizDetailBll quizDetailBll = new QuizDetailBll();
    
    private ArrayList<QuestionObj> lstQuestion;
    
    public QuestionManagementPanel() {
        initComponents();
        
        bindingData();
    }

    private void setTableWidth(String colName, int width){
        tblQuestion.getColumn(colName).setPreferredWidth(width);
        tblQuestion.getColumn(colName).setMaxWidth(width);
        tblQuestion.getColumn(colName).setMinWidth(width);
    }
    
    private void bindingData(){
        lstQuestion = questionBll.getAll();
        
        Vector cols = new Vector();
        cols.add("ID");
        cols.add("Content");
        cols.add("Answer A");
        cols.add("Answer B");
        cols.add("Answer C");
        cols.add("Answer D");
        cols.add("True Answer");
        
        Vector data = new Vector();
        for (QuestionObj question : lstQuestion) {
            Vector row = new Vector();
            row.add(question.getQuestionId());
            row.add(question.getContent());
            ArrayList<AnswerObj> lstAnswer = answerBll.getAnswerByQuestion(question.getQuestionId());
            String strTrueAnswer = "";
            int i = 0;
            for (AnswerObj answerObj : lstAnswer) {
                 row.add(answerObj.getContent());
                 if(answerObj.isStatus()){
                     if(i==0){
                         strTrueAnswer = "Answer A";
                     } else if(i==1){
                         strTrueAnswer = "Answer B";
                     } else if(i==2){
                         strTrueAnswer = "Answer C";
                     } else if(i==3){
                         strTrueAnswer = "Answer D";
                     }
                 }
                 i++;
            }
            row.add(strTrueAnswer);
            
            data.add(row);
        }
        
        DefaultTableModel tblModel = new DefaultTableModel(data, cols);
        tblQuestion.setModel(tblModel);
        setTableWidth("ID", 50);
        setTableWidth("True Answer", 100);
        
        if(lstQuestion.size()>0){
            bindingControl(0);
            tblQuestion.setRowSelectionInterval(0, 0);
        }
    }
    
    private void bindingControl(int index){
        if(index>=0 && index<lstQuestion.size()){
            QuestionObj question = lstQuestion.get(index);
            ArrayList<AnswerObj> lstAnsw = answerBll.getAnswerByQuestion(question.getQuestionId());
            
            txtId.setText(question.getQuestionId()+"");
            txtContent.setText(question.getContent());
            for(int i=0; i<lstAnsw.size(); i++){
                AnswerObj answer = lstAnsw.get(i);
                if(i==0){
                    txtAnswerA.setText(answer.getContent());
                } else if(i==1){
                    txtAnswerB.setText(answer.getContent());
                } else if(i==2){
                    txtAnswerC.setText(answer.getContent());
                } else if(i==3){
                    txtAnswerD.setText(answer.getContent());
                }
                
                if (answer.isStatus()) {
                    cbxTrueAnswer.setSelectedIndex(i);
                } 
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtContent = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        txtAnswerA = new javax.swing.JTextField();
        txtAnswerB = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtAnswerC = new javax.swing.JTextField();
        txtAnswerD = new javax.swing.JTextField();
        cbxTrueAnswer = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        lblResult = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQuestion = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(745, 265));

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("ID:");

        txtId.setEditable(false);

        jLabel2.setText("Content:");

        txtContent.setColumns(20);
        txtContent.setRows(5);
        jScrollPane2.setViewportView(txtContent);

        jLabel3.setText("Answer A:");

        jLabel4.setText("Answer B:");

        jLabel5.setText("Answer C:");

        jLabel6.setText("Answer D:");

        cbxTrueAnswer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Answer A", "Answer B", "Answer C", "Answer D" }));

        jLabel7.setText("True Ans:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(155, 155, 155)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxTrueAnswer, 0, 264, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jScrollPane2))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAnswerA)
                            .addComponent(txtAnswerB))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAnswerD)
                            .addComponent(txtAnswerC, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxTrueAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtAnswerC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtAnswerA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtAnswerD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtAnswerB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblMessage.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblMessage.setForeground(new java.awt.Color(255, 51, 51));
        lblMessage.setText("   ");

        lblResult.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblResult.setForeground(new java.awt.Color(51, 255, 51));
        lblResult.setText("   ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew)
                    .addComponent(btnSave)
                    .addComponent(btnDelete)
                    .addComponent(lblMessage)
                    .addComponent(lblResult))
                .addGap(23, 23, 23))
        );

        add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel5.setLayout(new java.awt.BorderLayout());

        tblQuestion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblQuestion.setRowHeight(20);
        tblQuestion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblQuestionMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblQuestion);

        jPanel5.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel5, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        txtId.setText("");
        cbxTrueAnswer.setSelectedIndex(0);
        txtContent.setText("");
        txtAnswerA.setText("");
        txtAnswerB.setText("");
        txtAnswerC.setText("");
        txtAnswerD.setText("");
        lblResult.setText("");
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        //get data
        lblResult.setText("");
        lblMessage.setText("");
        String strId = txtId.getText();
        String content = txtContent.getText();
        int trueAnswer = cbxTrueAnswer.getSelectedIndex();
        String answerA = txtAnswerA.getText();
        String answerB = txtAnswerB.getText();
        String answerC = txtAnswerC.getText();
        String answerD = txtAnswerD.getText();

        //validate
        boolean check = true;
        String message = "";

        if (content.isEmpty()) {
            check = false;
            message = "Question Content is empty";
            txtContent.requestFocus();
        }

        if (check && answerA.isEmpty()) {
            check = false;
            message = "Answer A content is empty";
            txtAnswerA.requestFocus();
        }

        if (check && answerB.isEmpty()) {
            check = false;
            message = "Answer B content is empty";
            txtAnswerB.requestFocus();
        }

        if (check && answerC.isEmpty()) {
            check = false;
            message = "Answer C content is empty";
            txtAnswerC.requestFocus();
        }

        if (check && answerD.isEmpty()) {
            check = false;
            message = "Answer D content is empty";
            txtAnswerD.requestFocus();
        }

        //process
        if (check) {
            QuestionObj question = new QuestionObj();
            question.setContent(content);

            boolean rs = true;
            boolean blnQues = false;

            if (strId.isEmpty()) {
                blnQues = questionBll.insert(question);
            } else {
                question.setQuestionId(Integer.parseInt(strId));
                blnQues = questionBll.update(question);
            }
            rs = blnQues && rs;

            if (blnQues) {
                if (strId.isEmpty()) {
                    ArrayList<QuestionObj> lstQuest = questionBll.getAll();
                    int questionID = lstQuest.get(lstQuest.size() - 1).getQuestionId();

                    for (int i = 0; i < 4; i++) {
                        AnswerObj answerObj = new AnswerObj();
                        answerObj.setQuestionId(questionID);
                        if (i == 0) {
                            answerObj.setContent(answerA);
                        } else if (i == 1) {
                            answerObj.setContent(answerB);
                        } else if (i == 2) {
                            answerObj.setContent(answerC);
                        } else if (i == 3) {
                            answerObj.setContent(answerD);
                        }
                        if (i == trueAnswer) {
                            answerObj.setStatus(true);
                        } else {
                            answerObj.setStatus(false);
                        }
                        boolean blnInsertAnswer = answerBll.insert(answerObj);
                        rs = blnInsertAnswer && rs;
                    }
                } else {
                    int questionID = question.getQuestionId();
                    ArrayList<AnswerObj> lstAnswer = answerBll.getAnswerByQuestion(questionID);

                    for (int i = 0; i < lstAnswer.size(); i++) {
                        AnswerObj answerObj = lstAnswer.get(i);
                        if (i == 0) {
                            answerObj.setContent(answerA);
                        } else if (i == 1) {
                            answerObj.setContent(answerB);
                        } else if (i == 2) {
                            answerObj.setContent(answerC);
                        } else if (i == 3) {
                            answerObj.setContent(answerD);
                        }
                        if (i == trueAnswer) {
                            answerObj.setStatus(true);
                        } else {
                            answerObj.setStatus(false);
                        }
                        boolean blnUpdateAnswer = answerBll.update(answerObj);
                        rs = blnUpdateAnswer && rs;
                    }
                }
            }
            if (rs) {
                if (strId.isEmpty()) {
                    lblResult.setText(Common.INSERT_SUCCESS);
                } else {
                    lblResult.setText(Common.UPDATE_SUCCESS);
                }
                bindingData();
            } else {
                if (strId.isEmpty()) {
                    lblMessage.setText(Common.INSERT_FAIL);
                } else {
                    lblMessage.setText(Common.UPDATE_FAIL);
                }
            }
        } else {
            lblMessage.setText(message);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        lblMessage.setText("");
        lblResult.setText("");
        int select = JOptionPane.showConfirmDialog(null, "Are you sure delete question?", "Delete Question", JOptionPane.YES_NO_OPTION);
        if (select == JOptionPane.YES_OPTION) {
            String strId = txtId.getText();
            if (!strId.isEmpty()) {
                QuestionObj question = questionBll.getById(Integer.parseInt(strId));

                boolean rs = true;
                if (quizDetailBll.getByQuestion(question.getQuestionId()).isEmpty()) {
                    boolean blnDelAns = answerBll.deleteByQuestion(question.getQuestionId());

                    rs = rs && blnDelAns;
                    if (blnDelAns) {
                        boolean blnDelete = questionBll.delete(question.getQuestionId());
                        rs = rs && blnDelete;
                    }
                } else {
                    rs = false;
                }

                if (rs) {
                    lblResult.setText(Common.DELETE_SUCCESS);
                    bindingData();
                } else {
                    lblMessage.setText(Common.DELETE_FAIL);
                }
            } else {
                lblMessage.setText("You must select a question to delete");
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblQuestionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblQuestionMouseClicked
        lblResult.setText("");
        lblMessage.setText("");
        int rowSelected = tblQuestion.getSelectedRow();
        bindingControl(rowSelected);
    }//GEN-LAST:event_tblQuestionMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cbxTrueAnswer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JLabel lblResult;
    private javax.swing.JTable tblQuestion;
    private javax.swing.JTextField txtAnswerA;
    private javax.swing.JTextField txtAnswerB;
    private javax.swing.JTextField txtAnswerC;
    private javax.swing.JTextField txtAnswerD;
    private javax.swing.JTextArea txtContent;
    private javax.swing.JTextField txtId;
    // End of variables declaration//GEN-END:variables
}
